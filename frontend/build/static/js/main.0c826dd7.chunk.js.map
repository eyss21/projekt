{"version":3,"sources":["components/Home.js","components/Fleet.js","components/Schedule.js","components/Orders.js","components/Profile.js","components/CarrierPanel.js","components/CustomerPanel.js","components/Login.js","components/Register.js","App.js","ApolloClient.js","index.js"],"names":["CardStyled","styled","Card","_templateObject","_taggedTemplateLiteral","Home","_ref","onRoleSelect","_jsx","Container","className","children","_jsxs","Row","Col","md","onClick","Body","Title","Fleet","Schedule","Orders","GET_USER_PROFILE","gql","UPDATE_PROFILE","_templateObject2","UPDATE_PASSWORD","_templateObject3","_templateObject4","Profile","email","useState","localStorage","getItem","data","loading","error","useQuery","variables","company_name","setCompanyName","postal_code","setPostalCode","city","setCity","street","setStreet","oldPassword","setOldPassword","newPassword","setNewPassword","editProfile","setEditProfile","changePassword","setChangePassword","updateProfile","updateLoading","updateError","useMutation","updatePassword","pwdLoading","pwdError","useEffect","getUserProfile","Button","variant","Form","onSubmit","async","e","preventDefault","alert","err","console","Group","controlId","Label","Control","type","value","onChange","target","placeholder","required","disabled","Alert","message","DELETE_USER","LOGOUT_USER","CarrierPanel","onLogout","deleteUser","logoutUser","logout_data","isDeleted","setIsDeleted","activeTab","setActiveTab","show","setShow","handleClose","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","handleShow","Offcanvas","onHide","Header","closeButton","Link","window","confirm","response","style","color","removeItem","CustomerPanel","LOGIN_USER","Login","onLoginSuccess","onRegister","setEmail","password","setPassword","loginUser","loginError","setLoginError","setItem","REGISTER_USER","Register","onCancel","formData","setFormData","confirmPassword","registerUser","success","setSuccess","handleChange","name","errorMessage","validateForm","test","AppContainer","div","App","role","setRole","isLoggedIn","setIsLoggedIn","showRegister","setShowRegister","selectedRole","handleLoginSuccess","handleRegister","handleCancelRegister","handleLogout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0c826dd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Row, Col, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst CardStyled = styled(Card)`\r\n  cursor: pointer;\r\n  text-align: center;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f8f9fa;\r\n  transition: background-color 0.3s;\r\n  &:hover {\r\n    background-color: #e9ecef;\r\n  }\r\n`;\r\n\r\nconst Home = ({ onRoleSelect }) => {\r\n  return (\r\n    <Container className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n      <Row className=\"w-100\">\r\n        <Col md={6}>\r\n          <CardStyled onClick={() => onRoleSelect('carrier')}>\r\n            <Card.Body>\r\n              <Card.Title>Przewoźnik</Card.Title>\r\n            </Card.Body>\r\n          </CardStyled>\r\n        </Col>\r\n        <Col md={6}>\r\n          <CardStyled onClick={() => onRoleSelect('customer')}>\r\n            <Card.Body>\r\n              <Card.Title>Klient</Card.Title>\r\n            </Card.Body>\r\n          </CardStyled>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Fleet = () => {\r\n  return (\r\n    <div>\r\n      <h2>Flota</h2>\r\n      <p>Informacje o flocie.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fleet;\r\n","import React from 'react';\r\n\r\nconst Schedule = () => {\r\n  return (\r\n    <div>\r\n      <h2>Rozkład jazdy</h2>\r\n      <p>Informacje o rozkładzie jazdy.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import React from 'react';\r\n\r\nconst Orders = () => {\r\n  return (\r\n    <div>\r\n      <h2>Zamówienia</h2>\r\n      <p>Informacje o zamówieniach.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\nimport { Form, Button, Alert, Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst GET_USER_PROFILE = gql`\r\n  query GetUserProfile($email: String!) {\r\n    getUserProfile(email: $email) {\r\n      email\r\n      company_name\r\n      postal_code\r\n      city\r\n      street\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PROFILE = gql`\r\n  mutation UpdateProfile($email: String!, $company_name: String!, $postal_code: String!, $city: String!, $street: String!) {\r\n    updateProfile(email: $email, company_name: $company_name, postal_code: $postal_code, city: $city, street: $street) {\r\n      email\r\n      company_name\r\n      postal_code\r\n      city\r\n      street\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PASSWORD = gql`\r\n  mutation UpdatePassword($email: String!, $oldPassword: String!, $newPassword: String!) {\r\n    updatePassword(email: $email, oldPassword: $oldPassword, newPassword: $newPassword)\r\n  }\r\n`;\r\n\r\nconst CardStyled = styled(Card)`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border: none;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Profile = () => {\r\n  const [email] = useState(localStorage.getItem('email'));\r\n  const { data, loading, error } = useQuery(GET_USER_PROFILE, { variables: { email } });\r\n  const [company_name, setCompanyName] = useState('');\r\n  const [postal_code, setPostalCode] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [editProfile, setEditProfile] = useState(false);\r\n  const [changePassword, setChangePassword] = useState(false);\r\n  const [updateProfile, { loading: updateLoading, error: updateError }] = useMutation(UPDATE_PROFILE);\r\n  const [updatePassword, { loading: pwdLoading, error: pwdError }] = useMutation(UPDATE_PASSWORD);\r\n\r\n  useEffect(() => {\r\n    if (data && data.getUserProfile) {\r\n      const { company_name, postal_code, city, street } = data.getUserProfile;\r\n      setCompanyName(company_name);\r\n      setPostalCode(postal_code);\r\n      setCity(city);\r\n      setStreet(street);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleProfileSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateProfile({ variables: { email, company_name, postal_code, city, street } });\r\n      alert(\"Profil został zaktualizowany.\");\r\n      setEditProfile(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updatePassword({ variables: { email, oldPassword, newPassword } });\r\n      alert(\"Hasło zostało zmienione.\");\r\n      setChangePassword(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editProfile && !changePassword && (\r\n        <CardStyled>\r\n          <h2 className=\"text-center\">Mój Profil</h2>\r\n          <p>Email: {email}</p>\r\n          <p>Nazwa Firmy: {company_name}</p>\r\n          <p>Kod Pocztowy: {postal_code}</p>\r\n          <p>Miasto: {city}</p>\r\n          <p>Ulica: {street}</p>\r\n          <Button variant=\"primary\" className=\"w-100 mt-3\" onClick={() => setEditProfile(true)}>\r\n            Edytuj Profil\r\n          </Button>\r\n          <Button variant=\"secondary\" className=\"w-100 mt-3\" onClick={() => setChangePassword(true)}>\r\n            Zmień Hasło\r\n          </Button>\r\n        </CardStyled>\r\n      )}\r\n      {editProfile && (\r\n        <CardStyled>\r\n          <h2 className=\"text-center\">Edytuj Profil</h2>\r\n          <Form onSubmit={handleProfileSubmit}>\r\n            <Form.Group controlId=\"formCompanyName\">\r\n              <Form.Label>Nazwa Firmy</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={company_name}\r\n                onChange={(e) => setCompanyName(e.target.value)}\r\n                placeholder=\"Nazwa Firmy\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formPostalCode\">\r\n              <Form.Label>Kod Pocztowy</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={postal_code}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n                placeholder=\"Kod Pocztowy\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formCity\">\r\n              <Form.Label>Miasto</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                placeholder=\"Miasto\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formStreet\">\r\n              <Form.Label>Ulica</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={street}\r\n                onChange={(e) => setStreet(e.target.value)}\r\n                placeholder=\"Ulica\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\" disabled={updateLoading}>\r\n              Zaktualizuj Profil\r\n            </Button>\r\n            {updateError && <Alert variant=\"danger\" className=\"mt-3\">Błąd aktualizacji profilu! {updateError.message}</Alert>}\r\n          </Form>\r\n          <Button variant=\"secondary\" className=\"w-100 mt-3\" onClick={() => setEditProfile(false)}>\r\n            Anuluj\r\n          </Button>\r\n        </CardStyled>\r\n      )}\r\n      {changePassword && (\r\n        <CardStyled className=\"mt-4\">\r\n          <h2 className=\"text-center\">Zmiana Hasła</h2>\r\n          <Form onSubmit={handlePasswordSubmit}>\r\n            <Form.Group controlId=\"formOldPassword\">\r\n              <Form.Label>Stare Hasło</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={oldPassword}\r\n                onChange={(e) => setOldPassword(e.target.value)}\r\n                placeholder=\"Stare Hasło\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formNewPassword\">\r\n              <Form.Label>Nowe Hasło</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                placeholder=\"Nowe Hasło\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\" disabled={pwdLoading}>\r\n              Zmień Hasło\r\n            </Button>\r\n            {pwdError && <Alert variant=\"danger\" className=\"mt-3\">Błąd zmiany hasła! {pwdError.message}</Alert>}\r\n          </Form>\r\n          <Button variant=\"secondary\" className=\"w-100 mt-3\" onClick={() => setChangePassword(false)}>\r\n            Anuluj\r\n          </Button>\r\n        </CardStyled>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { Button, Alert, Container, Navbar, Nav, Offcanvas } from 'react-bootstrap';\r\nimport Fleet from './Fleet';\r\nimport Schedule from './Schedule';\r\nimport Orders from './Orders';\r\nimport Profile from './Profile';\r\n\r\nconst DELETE_USER = gql`\r\n  mutation DeleteUser($email: String!) {\r\n    deleteUser(email: $email)\r\n  }\r\n`;\r\n\r\nconst LOGOUT_USER = gql`\r\n  mutation LogoutUser() {\r\n    logoutUser()\r\n  }\r\n`\r\n\r\nconst CarrierPanel = ({ onLogout }) => {\r\n  const [email] = useState(localStorage.getItem('email'));\r\n  const [deleteUser, { data, loading, error }] = useMutation(DELETE_USER);\r\n  const [logoutUser, {logout_data}] = useMutation(LOGOUT_USER);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('fleet');\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm(\"Czy na pewno chcesz usunąć swoje konto?\")) {\r\n      try {\r\n        const response = await deleteUser({ variables: { email } });\r\n        if (response.data.deleteUser === \"User deleted\") {\r\n          alert(\"Konto zostało usunięte.\");\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('email');\r\n          setIsDeleted(true);\r\n          onLogout();\r\n        } else {\r\n          alert(\"Nie udało się usunąć konta.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    if (window.confirm(\"Wylogowac Cie z aktualnej sesji?\")) {\r\n      try {\r\n        const result = await logoutUser({variables: {email}});\r\n        alert(response.logout_data.logoutUser);\r\n        onLogout();\r\n      } catch(err) {\r\n        console.error(\"po chuju:\" + err);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isDeleted) {\r\n    return <Alert variant=\"success\">Twoje konto zostało pomyślnie usunięte.</Alert>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Panel Przewoźnika</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Button variant=\"light\" onClick={handleShow}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </Button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Offcanvas show={show} onHide={handleClose}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Menu</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <Nav className=\"flex-column\">\r\n            <Nav.Link onClick={() => { setActiveTab('fleet'); handleClose(); }}>Flota</Nav.Link>\r\n            <Nav.Link onClick={() => { setActiveTab('schedule'); handleClose(); }}>Rozkład jazdy</Nav.Link>\r\n            <Nav.Link onClick={() => { setActiveTab('orders'); handleClose(); }}>Zamówienia</Nav.Link>\r\n            <Nav.Link onClick={() => { setActiveTab('profile'); handleClose(); }}>Mój Profil</Nav.Link>\r\n            <Nav.Link className=\"mt-auto\" onClick={handleLogout} disabled={loading} style={{ color: 'orange' }}>\r\n              Wyloguj\r\n            </Nav.Link>\r\n            <Nav.Link className=\"mt-auto\" onClick={handleDelete} disabled={loading} style={{ color: 'red' }}>\r\n              Usuń Konto\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n      <Container className=\"mt-3\">\r\n        {activeTab === 'fleet' && <Fleet />}\r\n        {activeTab === 'schedule' && <Schedule />}\r\n        {activeTab === 'orders' && <Orders />}\r\n        {activeTab === 'profile' && <Profile />}\r\n        {error && <Alert variant=\"danger\" className=\"mt-3\">Błąd usuwania konta! {error.message}</Alert>}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarrierPanel;\r\n","import React from 'react';\r\n\r\nconst CustomerPanel = () => {\r\n  return (\r\n    <div>\r\n      <h2>Panel Klienta</h2>\r\n      {/* Tu można dodać komponenty specyficzne dla panelu klienta */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerPanel;\r\n","import React, { useState } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation LoginUser($email: String!, $password: String!) {\r\n    loginUser(email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nconst CardStyled = styled(Card)`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border: none;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Login = ({ onLoginSuccess, onRegister }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginUser, { data, loading, error }] = useMutation(LOGIN_USER);\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser({ variables: { email, password } });\r\n      if (response.data.loginUser) {\r\n        localStorage.setItem('token', response.data.loginUser);\r\n        localStorage.setItem('email', email);\r\n        setLoginError(false);\r\n        onLoginSuccess();\r\n      } else {\r\n        setLoginError(true);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoginError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardStyled>\r\n      <h2 className=\"text-center\">Logowanie Przewoźnika</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Wprowadź email\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Hasło</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Hasło\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\" disabled={loading}>\r\n          Zaloguj się\r\n        </Button>\r\n        {loginError && <Alert variant=\"danger\" className=\"mt-3\">Błąd logowania! Nieprawidłowy email lub hasło.</Alert>}\r\n      </Form>\r\n      <Button variant=\"link\" onClick={onRegister} className=\"w-100 mt-2\">\r\n        Zarejestruj się\r\n      </Button>\r\n    </CardStyled>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation RegisterUser($email: String!, $password: String!, $company_name: String!, $postal_code: String!, $city: String!, $street: String!) {\r\n    registerUser(email: $email, password: $password, company_name: $company_name, postal_code: $postal_code, city: $city, street: $street) {\r\n      user_id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardStyled = styled(Card)`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border: none;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Register = ({ onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    company_name: '',\r\n    postal_code: '',\r\n    city: '',\r\n    street: ''\r\n  });\r\n  const [registerUser, { loading, error }] = useMutation(REGISTER_USER);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { email, password, confirmPassword, company_name, postal_code, city, street } = formData;\r\n    if (!email || !password || !confirmPassword || !company_name || !postal_code || !city || !street) {\r\n      return 'Wszystkie pola są wymagane';\r\n    }\r\n    if (password !== confirmPassword) {\r\n      return 'Hasła nie pasują do siebie';\r\n    }\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(password)) {\r\n      return 'Hasło musi zawierać co najmniej jedną wielką literę, cyfrę i mieć długość co najmniej 8 znaków';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const errorMessage = validateForm();\r\n    if (errorMessage) {\r\n      alert(errorMessage);\r\n      return;\r\n    }\r\n    try {\r\n      await registerUser({ variables: { ...formData } });\r\n      setSuccess(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <CardStyled>\r\n        <Alert variant=\"success\">Konto zostało założone pomyślnie!</Alert>\r\n        <Button variant=\"primary\" className=\"w-100 mt-3\" onClick={onCancel}>\r\n          Zaloguj się\r\n        </Button>\r\n      </CardStyled>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CardStyled>\r\n      <h2 className=\"text-center\">Rejestracja Przewoźnika</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Wprowadź email\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Hasło</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Hasło\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formConfirmPassword\">\r\n          <Form.Label>Potwierdź Hasło</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"Potwierdź Hasło\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formCompanyName\">\r\n          <Form.Label>Nazwa Firmy</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"company_name\"\r\n            value={formData.company_name}\r\n            onChange={handleChange}\r\n            placeholder=\"Nazwa Firmy\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formPostalCode\">\r\n          <Form.Label>Kod Pocztowy</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"postal_code\"\r\n            value={formData.postal_code}\r\n            onChange={handleChange}\r\n            placeholder=\"Kod Pocztowy\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formCity\">\r\n          <Form.Label>Miasto</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"city\"\r\n            value={formData.city}\r\n            onChange={handleChange}\r\n            placeholder=\"Miasto\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formStreet\">\r\n          <Form.Label>Ulica</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"street\"\r\n            value={formData.street}\r\n            onChange={handleChange}\r\n            placeholder=\"Ulica\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\" disabled={loading}>\r\n          Zarejestruj się\r\n        </Button>\r\n        {error && <Alert variant=\"danger\" className=\"mt-3\">Błąd rejestracji! {error.message}</Alert>}\r\n      </Form>\r\n      <Button variant=\"link\" onClick={onCancel} className=\"w-100 mt-2\">\r\n        Anuluj\r\n      </Button>\r\n    </CardStyled>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Home from './components/Home';\r\nimport CarrierPanel from './components/CarrierPanel';\r\nimport CustomerPanel from './components/CustomerPanel';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport styled from 'styled-components';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f0f2f5;\r\n`;\r\n\r\nfunction App() {\r\n  const [role, setRole] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      setRole('carrier');\r\n    }\r\n  }, []);\r\n\r\n  const handleRoleSelect = (selectedRole) => {\r\n    setRole(selectedRole);\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    setShowRegister(true);\r\n  };\r\n\r\n  const handleCancelRegister = () => {\r\n    setShowRegister(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setRole(null);\r\n    setIsLoggedIn(false);\r\n    setShowRegister(false);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('email');\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      {!role && <Home onRoleSelect={handleRoleSelect} />}\r\n      {role === 'carrier' && !isLoggedIn && !showRegister && <Login onLoginSuccess={handleLoginSuccess} onRegister={handleRegister} />}\r\n      {role === 'carrier' && !isLoggedIn && showRegister && <Register onCancel={handleCancelRegister} />}\r\n      {role === 'carrier' && isLoggedIn && <CarrierPanel onLogout={handleLogout} />}\r\n      {role === 'customer' && <CustomerPanel />}\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:8000/graphql',  // Upewnij się, że ten adres jest poprawny\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    }\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default client;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport client from './ApolloClient';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}